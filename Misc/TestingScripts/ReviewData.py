import matplotlib.pyplot as plt
import numpy as np

def getNumFromOneHot(inp):
    for i in range(10):
        if inp[i] == 1:
            return i


def draw_stroke_sequence(sequence, save_path=None, show=True):
    """
    sequence: numpy array or list of shape (T, 4) where each row is [dx, dy, eos, eod]
    save_path: optional path to save the plot as an image
    show: whether to display the plot
    """
    x, y = 0, 0
    xs, ys = [], []

    for dx, dy, eos, eod in sequence:
        x += dx*28
        y += dy*28
        xs.append(x)
        ys.append(y)

        if eos > 0.5:  # end of stroke
            xs.append(None)
            ys.append(None)

        if eod > 0.5:
            break

    plt.plot(xs, ys, linewidth=2)
    plt.gca().invert_yaxis()
    plt.axis('off')
    plt.axis('equal')
    

datas = []
actual = []

good_indexes = [5001, 5002, 5003, 5004, 5005, 5006, 5008, 5010, 5012, 5013, 5014, 5016, 5017, 5019, 5020, 5021, 5025, 5026, 5029, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5039, 5040, 5041, 5042, 5043, 5044, 5048, 5050, 5052, 5056, 5057, 5058, 5061, 5064, 5066, 5069, 5070, 5071, 5072, 5073, 5076, 5077, 5079, 5081, 5083, 5084, 5085, 5087, 5088, 5090, 5091, 5092, 5093, 5094, 5096, 5097, 5098, 5101, 5102, 5103, 5104, 5106, 5107, 5109, 5110, 5111, 5112, 5113, 5114, 5115, 5116, 5117, 5118, 5121, 5122, 5124, 5126, 5128, 5129, 5130, 5131, 5132, 5133, 5134, 5135, 5136, 5137, 5139, 5141, 5142, 5145, 5147, 5148, 5149, 5151, 5153, 5154, 5156, 5157, 5158, 5160, 5161, 5162, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5174, 5175, 5177, 5178, 5179, 5181, 5182, 5185, 5186, 5187, 5189, 5190, 5191, 5192, 5193, 5195, 5196, 5197, 5200, 5201, 5202, 5203, 5205, 5206, 5207, 5208, 5210, 5212, 5216, 5217, 5218, 5220, 5222, 5223, 5224, 5225, 5227, 5229, 5230, 5232, 5233, 5234, 5238, 5240, 5241, 5242, 5243, 5244, 5245, 5247, 5249, 5250, 5251, 5252, 5253, 5254, 5258, 5259, 5261, 5262, 5264, 5266, 5267, 5268, 5269, 5270, 5271, 5273, 5275, 5276, 5277, 5279, 5280, 5281, 5284, 5285, 5286, 5287, 5289, 5290, 5291, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5307, 5310, 5311, 5312, 5313, 5314, 5316, 5317, 5318, 5319, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5333, 5334, 5335, 5337, 5339, 5341, 5342, 5344, 5345, 5347, 5349, 5350, 5352, 5353, 5354, 5355, 5357, 5358, 5361, 5363, 5364, 5365, 5368, 5369, 5370, 5371, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379, 5383, 5384, 5386, 5388, 5389, 5391, 5393, 5396, 5397, 5398, 5399, 5402, 5403, 5405, 5406, 5410, 5411, 5412, 5414, 5415, 5420, 5421, 5422, 5423, 5424, 5425, 5428, 5429, 5430, 5431, 5432, 5433, 5434, 5435, 5437, 5438, 5440, 5441, 5442, 5443, 5445, 5447, 5451, 5452, 5453, 5454, 5455, 5456, 5458, 5460, 5461, 5462, 5463, 5465, 5466, 5467, 5469, 5470, 5471, 5475, 5477, 5478, 5479, 5480, 5481, 5482, 5483, 5484, 5486, 5488, 5489, 5490, 5491, 5494, 5495, 5496, 5497, 5498, 5501, 5503, 5505, 5506, 5507, 5510, 5511, 5512, 5513, 5514, 5515, 5518, 5520, 5521, 5523, 5524, 5526, 5527, 5528, 5529, 5531, 5532, 5533, 5534, 5535, 5536, 5537, 5540, 5541, 5544, 5545, 5549, 5550, 5551, 5552, 5553, 5554, 5557, 5558, 5560, 5562, 5563, 5565, 5566, 5567, 5568, 5570, 5571, 5572, 5573, 5574, 5575, 5576, 5579, 5580, 5581, 5582, 5584, 5585, 5587, 5588, 5589, 5590, 5591, 5592, 5594, 5595, 5598, 5600, 5602, 5603, 5604, 5605, 5606, 5608, 5609, 5610, 5612, 5614, 5615, 5620, 5622, 5625, 5627, 5628, 5629, 5630, 5632, 5633, 5634, 5637, 5641, 5642, 5643, 5645, 5646, 5651, 5652, 5655, 5657, 5659, 5660, 5662, 5666, 5667, 5668, 5669, 5670, 5671, 5674, 5679, 5680, 5682, 5683, 5684, 5685, 5686, 5688, 5689, 5690, 5693, 5694, 5697, 5699, 5702, 5704, 5705, 5706, 5712, 5715, 5716, 5717, 5721, 5722, 5725, 5726, 5728, 5731, 5732, 5737, 5738, 5741, 5745, 5747, 5750, 5751, 5755, 5758, 5759, 5760, 5762, 5764, 5769, 5773, 5774, 5776, 5778, 5779, 5781, 5782, 5783, 5786, 5788, 5789, 5790, 5792, 5793, 5794, 5795, 5798, 5801, 5802, 5805, 5806, 5807, 5808, 5809, 5810, 5811, 5812, 5813, 5814, 5816, 5817, 5818, 5819, 5820, 5822, 5825, 5826, 5827, 5830, 5831, 5834, 5836, 5837, 5838, 5839, 5840, 5846, 5847, 5848, 5849, 5852, 5855, 5857, 5859, 5862, 5863, 5864, 5865, 5867, 5869, 5870, 5872, 5873, 5874, 5875, 5876, 5877, 5880, 5881, 5882, 5883, 5884, 5885, 5886, 5889, 5890, 5891, 5893, 5894, 5896, 5897, 5898, 5899, 5901, 5902, 5905, 5910, 5911, 5915, 5916, 5917, 5920, 5922, 5925, 5928, 5929, 5930, 5931, 5932, 5933, 5940, 5941, 5942, 5943, 5947, 5950, 5951, 5956, 5957, 5959, 5961, 5964, 5965, 5966, 5968, 5969, 5970, 5971, 5972, 5973, 5974, 5975, 5976, 5977, 5978, 5979, 5981, 5982, 5984, 5985, 5987, 5990, 5991, 5995, 5996, 5998, 5999, 6000, 6001, 6003, 6004, 6005, 6008, 6009, 6011, 6012, 6013, 6016, 6017, 6018, 6019, 6020, 6021, 6022, 6025, 6028, 6029, 6031, 6032, 6034, 6037, 6038, 6039, 6040, 6042, 6043, 6044, 6045, 6046, 6047, 6049, 6050, 6053, 6054, 6056, 6057, 6058, 6059, 6060, 6063, 6067, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6076, 6077, 6079, 6081, 6082, 6083, 6087, 6088, 6089, 6091, 6092, 6093, 6094, 6095, 6097, 6098, 6099, 6103, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114, 6115, 6116, 6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 6126, 6127, 6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 6136, 6137, 6138, 6140, 6141, 6142, 6145, 6146, 6147, 6148, 6149, 6151, 6153, 6154, 6155, 6156, 6159, 6162, 6163, 6164, 6165, 6166, 6168, 6170, 6171, 6172, 6173, 6174, 6177, 6178, 6179, 6181, 6182, 6184, 6185, 6186, 6187, 6188, 6189, 6190, 6191, 6192, 6194, 6195, 6196, 6197, 6198, 6199, 6201, 6202, 6204, 6206, 6207, 6208, 6209, 6211, 6214, 6218, 6219, 6220, 6221, 6222, 6223, 6224, 6231, 6232, 6233, 6235, 6236, 6238, 6239, 6241, 6244, 6245, 6248, 6249, 6250, 6251, 6252, 6253, 6254, 6256, 6257, 6258, 6259, 6265, 6267, 6268, 6269, 6270, 6271, 6273, 6275, 6276, 6278, 6280, 6282, 6284, 6286, 6287, 6288, 6289, 6290, 6292, 6293, 6295, 6296, 6298, 6300, 6301, 6302, 6306, 6307, 6308, 6309, 6310, 6312, 6314, 6315, 6316, 6317, 6318, 6319, 6320, 6323, 6324, 6325, 6326, 6327, 6328, 6333, 6336, 6338, 6339, 6341, 6342, 6349, 6350, 6351, 6353, 6354, 6355, 6361, 6362, 6363, 6364, 6366, 6367, 6368, 6370, 6371, 6372, 6374, 6375, 6380, 6381, 6382, 6383, 6385, 6386, 6387, 6388, 6389, 6390, 6397, 6399, 6402, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 6411, 6414, 6415, 6416, 6419, 6420, 6421, 6422, 6424, 6425, 6427, 6429, 6430, 6436, 6438, 6442, 6443, 6444, 6445, 6447, 6451, 6454, 6455, 6456, 6457, 6461, 6465, 6468, 6470, 6472, 6473, 6476, 6478, 6479, 6481, 6482, 6483, 6484, 6487, 6489, 6490, 6498, 6500, 6501, 6500, 6501, 6502, 6503, 6506, 6507, 6508, 6509, 6510, 6511, 6512, 6514, 6515, 6517, 6520, 6522, 6524, 6525, 6526, 6527, 6530, 6532, 6533, 6536, 6537, 6539, 6540, 6543, 6544, 6545, 6546, 6547, 6548, 6550, 6551, 6552, 6553, 6555, 6556, 6561, 6563, 6573, 6577, 6579, 6580, 6582, 6583, 6585, 6586, 6587, 6588, 6591, 6595, 6596, 6601, 6604, 6606, 6608, 6609, 6618, 6619, 6620, 6621, 6622, 6623, 6628, 6629, 6631, 6632, 6634, 6638, 6639, 6640, 6644, 6646, 6647, 6648, 6650, 6652, 6653, 6655, 6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 6664, 6666, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 6675, 6678, 6679, 6680, 6681, 6682, 6683, 6684, 6685, 6686, 6688, 6691, 6692, 6694, 6695, 6696, 6697, 6702, 6705, 6706, 6708, 6710, 6711, 6712, 6714, 6715, 6716, 6719, 6720, 6724, 6726, 6728, 6729, 6731, 6733, 6737, 6740, 6743, 6746, 6747, 6748, 6750, 6751, 6752, 6753, 6755, 6757, 6758, 6760, 6762, 6766, 6767, 6768, 6770, 6772, 6775, 6777, 6778, 6779, 6780, 6782, 6785, 6788, 6789, 6791, 6795, 6798, 6799, 6800, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6824, 6825, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6836, 6837, 6838, 6839, 6843, 6844, 6845, 6846, 6848, 6850, 6852, 6853, 6856, 6857, 6858, 6860, 6862, 6863, 6864, 6868, 6869, 6871, 6874, 6875, 6877, 6878, 6879, 6880, 6881, 6882, 6884, 6885, 6886, 6889, 6891, 6892, 6893, 6895, 6896, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6906, 6907, 6908, 6909, 6910, 6913, 6916, 6917, 6918, 6919, 6920, 6921, 6922, 6923, 6925, 6927, 6928, 6930, 6931, 6932, 6933, 6934, 6935, 6937, 6938, 6941, 6942, 6946, 6947, 6948, 6951, 6954, 6957, 6959, 6960, 6961, 6962, 6963, 6964, 6966, 6967, 6968, 6969, 6970, 6971, 6973, 6974, 6976, 6977, 6978, 6979, 6980, 6983, 6987, 6988, 6992, 6994, 6997, 6998, 6999]


for i in good_indexes:
    try:
        data = np.loadtxt(f'sequences/testimg-{i}-targetdata.txt', delimiter=' ')
    except FileNotFoundError:
        print(f"❌ File not found at path: {i}")
        continue
    
    inputOneshot = data[0, 0:10]
    outputStrokes = data[:, 10:]
    outputStrokes[:, 0] = outputStrokes[:, 0]/28
    outputStrokes[:, 1] = outputStrokes[:, 1]/28
    
    actual.append(getNumFromOneHot(inputOneshot))
    datas.append((i, outputStrokes))

# Storage for accepted and rejected images
accepted = []
rejected = []

# Iterator index
index = 0


def on_key(event):
    global index
    
    if event.key.lower() == 'y':
        accepted.append(datas[index][0])
    elif event.key.lower() == 'n':
        rejected.append(datas[index][0])
    else:
        print("Press 'y' for yes, 'n' for no.")
        return
    
    index += 1
    plt.clf()

    if index < len(datas):
        draw_stroke_sequence(datas[index][1])
        plt.title(f"Image {index+1}/{len(datas)} — Press Y (yes) or N (no) Number: {actual[index]}")
        plt.draw()
    else:
        print("Done reviewing images!")
        plt.close()

# Show the first image
fig = plt.figure()
fig.canvas.mpl_connect('key_press_event', on_key)
draw_stroke_sequence(datas[index][1])
plt.title(f"Image {index+1}/{len(datas)} — Press Y (yes) or N (no) {actual[index]}")
plt.show()

print(accepted)